const assert = require('assert');
const path = require('path');
const fs = require('fs-extra');
const { runCommand,readZip } = require('./helper');

describe('serverless package', function () {
  before(function () {
    this.timeout(50000);
    this.plugin_path = runCommand('npm',['pack'])
    this.test_path = '.serverless-test'
    fs.removeSync(this.test_path)
    fs.copySync('examples',this.test_path)
    fs.renameSync(this.plugin_path,path.join(this.test_path,this.plugin_path))
  })
  it('should bundle gem and configure layer ', function () {
    this.timeout(50000);
    let context_path = path.join(this.test_path,'basic')
    options= {cwd: context_path, encoding : 'utf8'}
    runCommand('npm',['init','--yes'],options)
    runCommand('npm',['install','../'+this.plugin_path],options)
    runCommand('sls',['package'],options)
    let dot_serverless_path = path.join(context_path,'.serverless')
    let layer_zip_path = path.join(dot_serverless_path,'build','ruby_layer','gemLayer.zip')
    let function_zip_path = path.join(dot_serverless_path,'basic.zip')
    value = readZip(function_zip_path)
            .then(function(data){
              assert.deepEqual(['handler.rb','package-lock.json','package.json'],data)
            })
    value = readZip(layer_zip_path)
            .then(function(data){
              assert.deepEqual(['2.6.0/','2.6.0/bin/','2.6.0/build_info/','2.6.0/doc/','2.6.0/extensions/',
                        '2.6.0/gems/','2.6.0/specifications/','2.6.0/gems/httparty-0.18.1/',
                        '2.6.0/gems/mime-types-3.3.1/','2.6.0/gems/multi_xml-0.6.0/',
                        '2.6.0/gems/mime-types-data-3.2020.0512/'].sort(),data.sort())  
              })
    let rawdata = fs.readFileSync(path.join(dot_serverless_path,'serverless-state.json'));
    let serverless_config = JSON.parse(rawdata);
    let layers = serverless_config['service']['layers']
    const {package, ...other_layer_conf} = layers['gemLayer']
    assert.deepEqual(package['artifact'],path.resolve(layer_zip_path))
    assert.deepEqual(other_layer_conf,{ name: 'basic-dev-ruby-bundle', description: 'Ruby gem generated by serverless-ruby-bundler',
                             compatibleRuntimes: [ 'ruby2.5' ]})
    let functions = serverless_config['service']['functions']
    assert.deepEqual(functions['hello']['environment'],{ GEM_PATH: '/opt/2.6.0' })
    assert.deepEqual(functions['hello']['layers'],[ { Ref: 'GemLayerLambdaLayer' } ])
    assert.deepEqual(serverless_config['service']['artifact'],path.resolve(function_zip_path))
    cloud_resource = serverless_config['service']['provider']['compiledCloudFormationTemplate']['Resources']
    const {Content, ...others} = cloud_resource['GemLayerLambdaLayer']['Properties']
    assert.deepEqual(others,{CompatibleRuntimes: ['ruby2.5'],
                              Description: 'Ruby gem generated by serverless-ruby-bundler',
                              LayerName: 'basic-dev-ruby-bundle'
                            })
    assert.deepEqual(cloud_resource['HelloLambdaFunction']['Properties']['Layers'],[ { Ref: 'GemLayerLambdaLayer' } ])
    assert.deepEqual(cloud_resource['HelloLambdaFunction']['Properties']['Environment'],{Variables: { GEM_PATH: '/opt/2.6.0'}})
  });
});
